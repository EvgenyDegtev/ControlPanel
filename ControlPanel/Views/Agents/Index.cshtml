@using PagedList.Mvc
@using PagedList
@using ControlPanel.Helpers
@using ControlPanel.ViewModels
@*@model PagedList.PagedList<ControlPanel.Models.Agent>*@
@model AgentsIndexViewModel


<h2>Index</h2>

<p>
	@Html.ActionLink("Добавить", "Create")
</p>


@*@using (Html.BeginForm("AddFormFile", "Agents", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		<p>
			<input type="file" name="AddFromFile" />
			<input type="submit" value="Добавить из файла" />
		</p>
	}*@



@using (Html.BeginForm("Index", "Agents"))
{
	<p>
		<strong>Логин: </strong> <input type="text" name="searchString" value="@Model.SearchString" />
		<input type="submit" value="Поиск" />
	</p>
}



<table class="table table-hover">
	<tr>
		<th>
			@Html.DisplayNameFor(model => model.PagedAgents.ToList().FirstOrDefault().Name)
			@Html.Sort(Url.Action("Index",new {searchString=Model.SearchString, page=1,sortOrder=Model.SortOrder=="asc"?"desc":"asc",selectedEntityName="Name" }),"Name",Model.SelectedEntityName,Model.SortOrder)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.PagedAgents.ToList().FirstOrDefault().Login)
			@Html.Sort(Url.Action("Index", new { searchString = Model.SearchString, page = 1, sortOrder = Model.SortOrder == "asc" ? "desc" : "asc", selectedEntityName = "Login" }), "Login", Model.SelectedEntityName, Model.SortOrder)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.PagedAgents.ToList().FirstOrDefault().Algorithm)
			@Html.Sort(Url.Action("Index", new { searchString = Model.SearchString, page = 1, sortOrder = Model.SortOrder == "asc" ? "desc" : "asc", selectedEntityName = "Algorithm" }), "Algorithm", Model.SelectedEntityName, Model.SortOrder)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.PagedAgents.ToList().FirstOrDefault().WorkloadMaxContactsCount)
			@Html.Sort(Url.Action("Index", new { searchString = Model.SearchString, page = 1, sortOrder = Model.SortOrder == "asc" ? "desc" : "asc", selectedEntityName = "WorkloadMaxContactsCount" }), "WorkloadMaxContactsCount", Model.SelectedEntityName, Model.SortOrder)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.PagedAgents.ToList().FirstOrDefault().IsAlgorithmAllowServiceLevel)
			@Html.Sort(Url.Action("Index", new { searchString = Model.SearchString, page = 1, sortOrder = Model.SortOrder == "asc" ? "desc" : "asc", selectedEntityName = "IsAlgorithmAllowServiceLevel" }), "IsAlgorithmAllowServiceLevel", Model.SelectedEntityName, Model.SortOrder)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.PagedAgents.ToList().FirstOrDefault().Group.Name)
		</th>
		<th>

		</th>
	</tr>

	@foreach (var agent in Model.PagedAgents)
	{
		<tr>
			<td>
				@Html.DisplayFor(model => agent.Name)
			</td>
			<td>
				@Html.DisplayFor(model => agent.Login)
			</td>
			<td>
				@Html.DisplayFor(model => agent.AlgorithmName)
			</td>
			<td>
				@Html.DisplayFor(model => agent.WorkloadMaxContactsCount)
			</td>
			<td>
				@Html.DisplayFor(model => agent.IsAlgorithmAllowServiceLevel)
			</td>
			<td>
				@Html.DisplayFor(model => agent.Group.Name)
			</td>
			<td>
				<a href=@Url.Action("Edit", new {id=agent.Id })><i class="fa fa-edit"></i></a>
				|
				<a href=@Url.Action("Delete", new {id=agent.Id })><i class="fa fa-close"></i></a>
			</td>
		</tr>
	}
</table>

	Страница @(Model.PagedAgents.PageCount < Model.PagedAgents.PageNumber ?0: Model.PagedAgents.PageNumber) из @Model.PagedAgents.PageCount
	@Html.PagedListPager(Model.PagedAgents, currentPage => Url.Action("Index", new { page=currentPage, searchString=@Model.SearchString }))
