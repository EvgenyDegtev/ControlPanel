@model ControlPanel.ViewModels.AgentAddSkillConfirmationViewModel

<h2>SkillAddConfirmation</h2>

@using(Html.BeginForm())
{
<div class="form-horizontal">
	@Html.HiddenFor(model => model.AgentToSkill.SkillId)
	@Html.HiddenFor(model => model.AgentToSkill.AgentId)

	<div class="form-group">
		@Html.Label("Навык", htmlAttributes: new {@class= "control-label col-md-2" })
		<div class="col-md-10">
			<span class="form-control">@Model.SkillName</span>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model=>model.AgentToSkill.Level, htmlAttributes: new {@class="control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownListFor(model => model.AgentToSkill.Level, Model.Levels as SelectList, htmlAttributes: new { @class = "form-control" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model=>model.AgentToSkill.OrderIndex, htmlAttributes: new {@class="control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model=>model.AgentToSkill.OrderIndex, new { htmlAttributes = new {@class="form-control"} })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model=>model.AgentToSkill.BreakingMode, htmlAttributes: new {@class="control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownListFor(model => model.AgentToSkill.BreakingMode, Model.Modes as SelectList, htmlAttributes: new { @class = "form-control" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model=>model.AgentToSkill.Percent, htmlAttributes: new {@class="control-label col-md-2"})
		<div class="col-md-10">
			@Html.EditorFor(model=>model.AgentToSkill.Percent, new {htmlAttributes=new {@class="form-control"} })
		</div>
	</div>


	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-default" />
		</div>
	</div>
</div>
}

