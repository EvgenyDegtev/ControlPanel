<h2>Мониторинг агентов</h2>
<div id="time"></div>
<br />

<table class="table table-striped" id="tableId">
	<thead>
		<tr>
			<th>Имя</th>
			<th>Логин</th>
			<th>Алгоритм</th>
		</tr>
	</thead>
	<tbody id="tableBodyId">

	</tbody>
</table>

<script>
	"use strict";

	//Agent class
	class Agent {
		constructor(name, login, algorithm) {
			this.name = name;
			this.login = login;
			this.algorithm = algorithm		
		}

	}

	function updateTable() {
		console.log(new Date().toTimeString() + " Func updateTable started");

		removeTableBody();
		let responseAgentsArray = getDataFromApi();
		let tableBody = createTableBody();
		fillInTable(tableBody, responseAgentsArray);
	}

	function removeTableBody(){
		console.log(new Date().toTimeString() + " Func clearTableBody started");
		let table = document.getElementById("tableId");
		let tableBody = document.getElementById("tableBodyId");
		table.removeChild(tableBody);
	}

	function getDataFromApi() {
		console.log(new Date().toTimeString() + " Func getDataFromApi started");
		let jsonResponse;
		let request = new XMLHttpRequest();
		//request.responseType = 'json';
		let dataUrl = "/Monitoring/GetTopAgents";
		request.open("GET", dataUrl, false);


		request.onload = function () {
			jsonResponse = request.response;
		}
		request.send();
		request.onprogress = (event) => {
			console.log(`Отправлено ${event.loaded} из ${event.total}`);
		};







		console.log(new Date().toTimeString() + " HTTP REQ to " + dataUrl+" started");
		//console.log(jsonResponse);
		console.log(new Date().toTimeString() + " JSON parse started");
		let responseAgentsArray = JSON.parse(jsonResponse);
		console.log(new Date().toTimeString() + " Func getDataFromApi ended");
		return responseAgentsArray;
	}

	function createTableBody() {
		console.log(new Date().toTimeString() + " Func createTableBody started");
		let table = document.getElementById("tableId");
		let elem = document.createElement("tbody");
		elem.setAttribute("id", "tableBodyId");
		table.appendChild(elem);
		let tableBody = document.getElementById("tableBodyId");
		return tableBody;
	}

	function fillInTable(tableBody, responseAgentsArray) {
		console.log(new Date().toTimeString() + " Func fillInTable started");
		for (var i = 0; i < responseAgentsArray.length; i++) {
			let newRow = document.createElement("tr");
			let nameTag = document.createElement("td");
			nameTag.textContent = responseAgentsArray[i].name;
			let loginTag = document.createElement("td");
			loginTag.textContent = responseAgentsArray[i].login;
			let algoTag = document.createElement("td");
			algoTag.textContent = responseAgentsArray[i].algorithm;

			newRow.appendChild(nameTag);
			newRow.appendChild(loginTag);
			newRow.appendChild(algoTag);

			tableBody.appendChild(newRow);
			console.log(new Date().toTimeString() + " Table row added");
		}

	}
	
	function updateTime() {
		document.getElementById("time").innerHTML = new Date().toTimeString();
		console.log(new Date().toTimeString() +" Func updateTime started");
	}

	//Action
	console.log(new Date().toTimeString() + " Script started");
	updateTime();
	updateTable();
	setInterval(updateTime, 10000);
	setInterval(updateTable, 10000);
	
</script>